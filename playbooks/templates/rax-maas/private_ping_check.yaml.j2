{% from "templates/common/macros.jinja" import get_metadata with context %}
{% set label = "private_ping_check" %}
{% set check_name = label+'--'+inventory_hostname %}
type              : remote.ping
label             : "{{ check_name }}"
period            : "{{ maas_check_period_override[label] | default(maas_check_period) }}"
timeout           : "{{ maas_check_timeout_override[label] | default(maas_check_timeout) }}"
disabled          : "{{ (check_name is match(maas_excluded_checks_regex)) | ternary('true', 'false') }}"
target_hostname   : "{{ ansible_default_ipv4.address }}"
details           :
  count           : {{ private_ping_check_count }}
monitoring_zones_poll:
  - "{{ maas_private_monitoring_zone }}"
{{ get_metadata(label).strip() }}
{# Add extra metadata options with two leading white spaces #}
  event-type-override: "ping"
alarms            :
  Packet_loss               :
        label               : packet_loss--{{ inventory_hostname | quote }}
        notification_plan_id: "{{ maas_notification_plan_override[label] | default(maas_notification_plan) }}"
        disabled            : {{ (('private_ping_check--'+inventory_hostname | quote) is match(
        maas_excluded_alarms_regex)) | ternary('true', 'false') }}
        criteria            : |
            :set consecutiveCount=3
            if (metric['available'] > 80) {
                return new AlarmStatus(OK, 'Ping responds as expected');
            }
            return new AlarmStatus(CRITICAL, 'Packet loss has occurred');
